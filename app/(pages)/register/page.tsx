"use client"; import { useState, ChangeEvent, FormEvent } from "react"; import { useRouter } from "next/navigation"; interface UserForm { name: string; email: string; password: string; phone: string; address: string; } export default function Register() { const [form, setForm] = useState<UserForm>({ name: "", email: "", password: "", phone: "", address: "", }); const [error, setError] = useState<string>(""); const router = useRouter(); const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => { const { name, value } = e.target; setForm({ ...form, [name]: value }); }; const handleRegister = (e: FormEvent) => { e.preventDefault(); if (!form.email.includes("@")) { setError("Please enter a valid email address"); return; } const users: UserForm[] = JSON.parse(localStorage.getItem("users") || "[]"); if (users.find((u) => u.email === form.email)) { setError("Email already in use"); return; } const newUser = { ...form, role: "patron", id: Date.now() } as any; users.push(newUser); localStorage.setItem("users", JSON.stringify(users)); router.push("/login"); }; return ( <div className=""> max-w-md mx-auto mt-20 p-8 bg-white rounded-lg shadow border border-zinc-200"><h1 className=""> text-3xl font-bold mb-6 text-zinc-900 text-center"> Register as a Patron </h1><form onSubmit={handleRegister} className=""> space-y-4" noValidate><input className=""> w-full px-4 py-2 border border-zinc-300 text-zinc-900 bg-white rounded-md focus:outline-none focus:ring-2 focus:ring-zinc-500" type="text" name="name" placeholder="Full name" value={form.name} onChange={handleInputChange} required /><input className=""> w-full px-4 py-2 border border-zinc-300 text-zinc-900 bg-white rounded-md focus:outline-none focus:ring-2 focus:ring-zinc-500" type="email" name="email" placeholder="Email" value={form.email} onChange={handleInputChange} required /><input className=""> w-full px-4 py-2 border border-zinc-300 text-zinc-900 bg-white rounded-md focus:outline-none focus:ring-2 focus:ring-zinc-500" type="password" name="password" placeholder="Password" value={form.password} onChange={handleInputChange} required /><input className=""> w-full px-4 py-2 border border-zinc-300 text-zinc-900 bg-white rounded-md focus:outline-none focus:ring-2 focus:ring-zinc-500" type="tel" name="phone" placeholder="Phone number" value={form.phone} onChange={handleInputChange} /><input className=""> w-full px-4 py-2 border border-zinc-300 text-zinc-900 bg-white rounded-md focus:outline-none focus:ring-2 focus:ring-zinc-500" type="text" name="address" placeholder="Address" value={form.address} onChange={handleInputChange} /> {error && <p className=""> text-red-600 text-sm">{error} </p>} <button type="submit" className=""> w-full py-2 bg-zinc-900 text-zinc-50 font-semibold rounded-md hover:bg-zinc-800 transition"> Register </button></form></div> ); }